<!DOCTYPE html>
<html lang="en">

<head>
    {{>head}}
    <style>
        #c1 {

            overflow: hidden;
            text-overflow: ellipsis;
            display: -webkit-box;
            -webkit-line-clamp: 3;
            -webkit-box-orient: vertical;
        }
    </style>

</head>

<body>
    <!-- Main Wrapper -->
    <div class="main-wrapper">

        <!-- Header -->
        {{>header}}
        <!-- /Header -->

        <!-- Sidebar -->
        {{>admin_sidebar}}
        <!-- /Sidebar -->

        <!-- Page Wrapper -->
        <div class="page-wrapper">
            <div class="content container-fluid">
                <div class="page-header">
                    <div class="row align-items-center">
                        <div class="col">
                            <h3 class="page-title">Task</h3>
                            <ul class="breadcrumb">
                                <li class="breadcrumb-item">Home</li>
                                <li class="breadcrumb-item active">Task</li>
                            </ul>
                        </div>
                        <div class="col-auto float-right ml-auto">
                            <a href="#" class="btn add-btn" data-toggle="modal" data-target="#add_project"><i
                                    class="fa fa-plus"></i> Add Task</a>
                        </div>
                    </div>
                </div>
                {{>admin_filter}}
                {{>admin_project_details}}
                {{>admin_add_task_in_pop_pop}}
                {{>admin_edit_task_pop_pop}}
                {{>admin_view_task_in_pop_pop}}

            </div>

        </div>


    </div>
    <!-- /Page Wrapper -->

    </div>
    <!-- /Main Wrapper -->

    {{>js}}

</body>
<script>
    $(document).ready(function () {
        $('#liadmin_task').addClass('active');
        if ($('.datetimepicker').length > 0) {
            $('.datetimepicker').datetimepicker({
                format: 'DD/MM/YYYY',
                icons: {
                    up: "fa fa-angle-up",
                    down: "fa fa-angle-down",
                    next: 'fa fa-angle-right',
                    previous: 'fa fa-angle-left'
                }
            });
        }
    });


    $('#editstarttime').datetimepicker({
        format: 'hh:mm:ss a'
    });
    $('#editendtime').datetimepicker({
        format: 'hh:mm:ss a'
    });
    getprojectname()
    getemployeeemailid()
    data()
    editgetemployeeemailid()

    function getprojectname() {
        var requestOptions = {
            method: 'GET',
            redirect: 'follow'
        };

        fetch("http://127.0.0.1:3647/api/project", requestOptions)
            .then(response => response.json())
            .then(result => {
                var select = document.getElementById('projectname');
                var select1 = document.getElementById('projectsearch');
                select.innerHTML = "";
                for (i = 0; i < result.data.length; i++) {
                    var projectname = result.data[i].Project_Name
                    //console.log(cname)
                    var template = `
                            <option value="${projectname}">${projectname}</option>
                    `
                    select.innerHTML += template;
                    select1.innerHTML += template;
                }

            })
            .catch(error => console.log('error', error));
    }
    function getemployeeemailid() {
        var requestOptions = {
            method: 'GET',
            redirect: 'follow'
        };

        fetch("http://127.0.0.1:3647/api/users", requestOptions)
            .then(response => response.json())
            .then(result => {
                var select = document.getElementById('employeeemailid');
                var select1 = document.getElementById('employeesearch');
                select.innerHTML = "";
                for (i = 0; i < result.data.length; i++) {
                    var employeeemailid = result.data[i].email
                    var employeename = result.data[i].name
                    var role = result.data[i].role
                    if (role === "Employee") {
                        var template = `
                            <option value="${employeeemailid}">${employeeemailid} (${employeename})</option>
                    `
                        select.innerHTML += template;
                        select1.innerHTML += template;
                    }
                    //console.log(cname)

                }

            })
            .catch(error => console.log('error', error));
    }
    function editgetemployeeemailid() {
        var requestOptions = {
            method: 'GET',
            redirect: 'follow'
        };

        fetch("http://127.0.0.1:3647/api/users", requestOptions)
            .then(response => response.json())
            .then(result => {
                var select = document.getElementById('editemployeeid');
                select.innerHTML = "";
                for (i = 0; i < result.data.length; i++) {
                    var editemployeeid = result.data[i].email
                    var editname = result.data[i].name
                    var role = result.data[i].role
                    if (role === "Employee") {
                        var template = `
                            <option value="${editemployeeid}">${editemployeeid} (${editname})</option>
                    `
                        select.innerHTML += template;
                    }
                    //console.log(cname)

                }

            })
            .catch(error => console.log('error', error));
    }



    function addtask() {
        event.preventDefault();
        document.getElementById("error").innerHTML = "";
        var Project_Name = document.getElementById("projectname").value
        var Task = document.getElementById("task").value
        var Description = document.getElementById("description").value
        var Employee_Email_id = document.getElementById("employeeemailid").value
        var Date = document.getElementById("date").value
        if (document.getElementById("projectname").value.trim() == "" && document.getElementById("task").value.trim() == "" && document.getElementById("description").value.trim() == "" && document.getElementById("employeeemailid").value.trim() == "") {
            document.getElementById("error").innerHTML = "Enter Task , Description and Select Project name , Allocate Employee Email Id";
        } else if (document.getElementById("projectname").value.trim() == "" && document.getElementById("task").value.trim() == "" && document.getElementById("description").value.trim() == "") {
            document.getElementById("error").innerHTML = "Enter Task , Description and Select Project name ";

        } else if (document.getElementById("projectname").value.trim() == "" && document.getElementById("task").value.trim() == "") {
            document.getElementById("error").innerHTML = "Enter Task  and Select Project name ";

        } else if (document.getElementById("projectname").value.trim() == "") {
            document.getElementById("error").innerHTML = "Select Project name ";

        } else if (document.getElementById("task").value.trim() == "") {
            document.getElementById("error").innerHTML = "Enter Task ";

        } else if (document.getElementById("description").value.trim() == "") {
            document.getElementById("error").innerHTML = "Enter Description ";
        } else if (document.getElementById("employeeemailid").value.trim() == "") {
            document.getElementById("error").innerHTML = "Select Allocate Employee Email Id "
        } else if (document.getElementById("date").value.trim() == "") {
            document.getElementById("error").innerHTML = "Enter Date "
        } else {
            const getToken = localStorage.getItem("Token")
            const token = "Bearer" + " " + getToken
            var myHeaders = new Headers();
            myHeaders.append("Authorization", token);
            myHeaders.append("Content-Type", "application/json");

            var raw = JSON.stringify({
                "Project": Project_Name,
                "Task": Task,
                "Description": Description,
                "Allocate_Employe_Email_Id": Employee_Email_id,
                "Date": Date
            });
            var requestOptions = {
                method: 'POST',
                headers: myHeaders,
                body: raw,
                redirect: 'follow'
            };

            fetch("http://127.0.0.1:3647/api/task/create", requestOptions)
                .then(response => response.json())
                .then(result => {
                    if (!result.error) {
                        Swal.fire({
                            // position: 'top-end',
                            icon: 'success',
                            title: 'Add Sucessful',
                            showConfirmButton: false,
                            timer: 3000
                        })
                        setTimeout(function () {
                            window.location.href = "admin_task";
                        }, 3000);
                    } else {
                        document.getElementById("error6").innerHTML = result.message
                    }
                })
                .catch(error => console.log('error', error));
        }

    }

    function data() {
        var requestOptions = {
            method: 'GET',
            redirect: 'follow'
        };

        fetch("http://127.0.0.1:3647/api/task", requestOptions)
            .then(response => response.json())
            .then(result => {
                var Data = document.getElementById('data');
                Data.innerHTML = "";
                for (i = 0; i < result.data.length; i++) {
                    var Project_Name = result.data[i].Project
                    var Task = result.data[i].Task
                    var Description = result.data[i].Description
                    var Start_Time = result.data[i].Start_Time
                    var End_Time = result.data[i].End_Time
                    var Employee_Email_id = result.data[i].Allocate_Employe_Email_Id
                    var Status = result.data[i].Status
                    var Date = result.data[i].Date
                    var id = result.data[i]._id
                    console.log(Employee_Email_id)
                    var template = `
                    
		
			<div class="col-lg-4 col-sm-6 col-md-4 col-xl-3" >
		<div class="card" >
			<div class="card-body" >
				<div class="dropdown dropdown-action profile-action">
					<span class="task-priority badge ${Status == 'To Do' ? 'bg-inverse-warning' : (Status == 'On Going' ? 'bg-inverse-danger' : (Status == 'Complete' ? 'bg-inverse-success' : ''))}">${Status}</span>
					<a href="#" class="action-icon dropdown-toggle" data-toggle="dropdown" aria-expanded="false"><i
							class="material-icons">more_vert</i></a>
					<div class="dropdown-menu dropdown-menu-right">
						<a onclick="{edit('${Project_Name}','${Task}','${Description}','${Start_Time}','${End_Time}','${Employee_Email_id}','${Status}','${id}','${Date}')}" class="dropdown-item" href="#" data-toggle="modal" data-target="#admin_edit_project"><i
								class="fa fa-pencil m-r-5"></i> Edit</a>
						<a class="dropdown-item" href="#" data-toggle="modal" onclick="{Delete('${id}')}"><i
								class="fa fa-trash-o m-r-5"></i>Delete</a>

					</div>
				</div>
				<h4 class="project-title"><a onclick="{view('${Project_Name}','${Task}','${Description}','${Employee_Email_id}','${id}')}" href="#" data-toggle="modal" data-target="#view_project">${Project_Name}</a></h4>
				<p class="text-muted">${Task}
				</p>
				<br>
                <div class="pro-deadline m-b-15">
                    <div class="sub-title">
						Description :
					</div>
				    <div id="c1" class="text-muted">
                        ${Description}
				    </div>
                    
                </div>
				<div class="pro-deadline m-b-15">
					<div class="sub-title">
						Allocate Employee Email Id :
					</div>
					<div class="text-muted">
						${Employee_Email_id}
					</div>
				</div>
				<div class="pro-deadline m-b-15">
					<div class="sub-title">
						Start Time:
					</div>
					<div class="text-muted">
						${Start_Time}
					</div>
				</div>
				<div class="pro-deadline m-b-15">
					<div class="sub-title">
						End Time:
					</div>
					<div class="text-muted">
						${End_Time}
					</div>
				</div>
				<div class="pro-deadline m-b-15">
					<div class="sub-title">
						Date:
					</div>
					<div class="text-muted">
						${Date}
					</div>
				</div>
				</div>
				</div>
				</div>
				
			
	`;
                    Data.innerHTML += template
                }
            })
            .catch(error => console.log('error', error));
    }

    function Delete(id) {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                Swal.fire(
                    'Deleted!',
                    'Your file has been deleted.',
                    'success'
                )
                var requestOptions = {
                    method: 'DELETE',
                    redirect: 'follow'
                };

                fetch(`http://127.0.0.1:3647/api/task/${id}`, requestOptions)
                    .then(response => response.json())
                    .then(result => {
                        if (!result.error) {
                            data()
                        } else {
                            document.getElementById("error").innerHTML = result.message
                        }
                    })
                    .catch(error => console.log('error', error));
            }
        })
    }

    function edit(Project_Name, Task, Description, Start_Time, End_Time, Employee_Email_id, Status, id, Date) {
        document.getElementById("edittask").value = Task
        document.getElementById("editstarttime").value = Start_Time
        document.getElementById("editendtime").value = End_Time
        document.getElementById("editdate").value = Date
        document.getElementById("id").value = id
        $('#editdescription').summernote('code', Description);
        //document.getElementById("employeeemailid").value

        console.log(id)
        var select2 = document.getElementById("editemployeeid")
        select2.value = Employee_Email_id;
        triggerChange(select2)
        var select3 = document.getElementById("editstatus")
        select3.value = Status;
        triggerChange(select3)
    }
    function triggerChange(element) {
        let changeEvent = new Event("change");
        element.dispatchEvent(changeEvent);
    }

    function update() {
        event.preventDefault();
        document.getElementById("error1").innerHTML = "";

        var Task = document.getElementById("edittask").value
        var Description = document.getElementById("editdescription").value
        var Employee_Email_Id = document.getElementById("editemployeeid").value
        var Start_Time = document.getElementById("editstarttime").value
        var End_Time = document.getElementById("editendtime").value
        var Status = document.getElementById("editstatus").value
        var Date = document.getElementById("editdate").value
        var _ID = document.getElementById("id").value


        if (document.getElementById("edittask").value.trim() == "" && document.getElementById("editdescription").value.trim() == "" && document.getElementById("editdate").value.trim() == "") {
            document.getElementById("error1").innerHTML = "Enter Task, Description and Date";
        } else if (document.getElementById("edittask").value.trim() == "" && document.getElementById("editdescription").value.trim() == "") {
            document.getElementById("error1").innerHTML = "Enter Task and Description ";
        } else if (document.getElementById("edittask").value.trim() == "") {
            document.getElementById("error1").innerHTML = "Enter Task";
        } else if (document.getElementById("editdescription").value.trim() == "") {
            document.getElementById("error1").innerHTML = "Enter Description";
        } else if (document.getElementById("editdate").value.trim() == "") {
            document.getElementById("error1").innerHTML = "Enter Date";
        } else {

            const getToken = localStorage.getItem("Token")
            const token = "Bearer" + " " + getToken
            var myHeaders = new Headers();
            myHeaders.append("Authorization", token);
            myHeaders.append("Content-Type", "application/json");

            var raw = JSON.stringify({
                "Task": Task,
                "Description": Description,
                "Start_Time": Start_Time,
                "End_Time": End_Time,
                "Allocate_Employe_Email_Id": Employee_Email_Id,
                "Status": Status,
                "Date": Date
            });

            var requestOptions = {
                method: 'PUT',
                headers: myHeaders,
                body: raw,
                redirect: 'follow'
            };

            fetch(`http://127.0.0.1:3647/api/task/${_ID}`, requestOptions)
                .then(response => response.json())
                .then(result => {
                    if (!result.error) {
                        Swal.fire({
                            //position: 'top-end',
                            icon: 'success',
                            title: 'Update Successful',
                            showConfirmButton: false,
                            timer: 3000
                        })
                        setTimeout(function () {
                            window.location.reload();
                        }, 3000);
                    } else {
                        document.getElementById("error1").innerHTML = result.message
                    }
                })

                .catch(error => console.log('error', error));

        }
    }


    function view(Project_Name, Task, Description, Employee_Email_id) {

        document.getElementById("viewprojectname").innerHTML = Project_Name
        document.getElementById("viewtask").innerHTML = Task
        document.getElementById("viewdescription").innerHTML = Description
        document.getElementById("viewemployeeid").innerText = Employee_Email_id
    }

    function search() {
        var requestOptions = {
            method: 'GET',
            redirect: 'follow'
        };

        fetch("http://127.0.0.1:3647/api/task", requestOptions)
            .then(response => response.json())
            .then(result => {
                var Data = document.getElementById('data');
                Data.innerHTML = "";
                //const email = localStorage.getItem("Email");
                //console.log(email)
                for (i = 0; i < result.data.length; i++) {
                    var Employee_Email_id = result.data[i].Allocate_Employe_Email_Id
                    var searchstatus = document.getElementById("searchstatus").value
                    var searchprojectname = document.getElementById("projectsearch").value
                    var employee_search = document.getElementById("employeesearch").value
                    var Project_Name = result.data[i].Project
                    var Task = result.data[i].Task
                    var Description = result.data[i].Description
                    var Start_Time = result.data[i].Start_Time
                    var End_Time = result.data[i].End_Time
                    var Status = result.data[i].Status
                    var Date = result.data[i].Date
                    var id = result.data[i]._id
                    if (searchstatus == Status && Project_Name == searchprojectname && employee_search == Employee_Email_id) {
                        var template = `
                        <div class="col-lg-4 col-sm-6 col-md-4 col-xl-3" >
		<div class="card" >
			<div class="card-body" >
				<div class="dropdown dropdown-action profile-action">
					<span class="task-priority badge ${Status == 'To Do' ? 'bg-inverse-warning' : (Status == 'On Going' ? 'bg-inverse-danger' : (Status == 'Complete' ? 'bg-inverse-success' : ''))}">${Status}</span>
					<a href="#" class="action-icon dropdown-toggle" data-toggle="dropdown" aria-expanded="false"><i
							class="material-icons">more_vert</i></a>
					<div class="dropdown-menu dropdown-menu-right">
						<a onclick="{edit('${Project_Name}','${Task}','${Description}','${Start_Time}','${End_Time}','${Employee_Email_id}','${Status}','${id}','${Date}')}" class="dropdown-item" href="#" data-toggle="modal" data-target="#admin_edit_project"><i
								class="fa fa-pencil m-r-5"></i> Edit</a>
						<a class="dropdown-item" href="#" data-toggle="modal" onclick="{Delete('${id}')}"><i
								class="fa fa-trash-o m-r-5"></i>Delete</a>

					</div>
				</div>
				<h4 class="project-title"><a onclick="{view('${Project_Name}','${Task}','${Description}','${Employee_Email_id}','${id}')}" href="#" data-toggle="modal" data-target="#view_project">${Project_Name}</a></h4>
				<p class="text-muted">${Task}
				</p>
				<br>
                <div class="pro-deadline m-b-15">
                    <div class="sub-title">
						Description :
					</div>
				    <div id="c1" class="text-muted">
                        ${Description}
				    </div>
                    
                </div>
				<div class="pro-deadline m-b-15">
					<div class="sub-title">
						Allocate Employee Email Id :
					</div>
					<div class="text-muted">
						${Employee_Email_id}
					</div>
				</div>
				<div class="pro-deadline m-b-15">
					<div class="sub-title">
						Start Time:
					</div>
					<div class="text-muted">
						${Start_Time}
					</div>
				</div>
				<div class="pro-deadline m-b-15">
					<div class="sub-title">
						End Time:
					</div>
					<div class="text-muted">
						${End_Time}
					</div>
				</div>
				<div class="pro-deadline m-b-15">
					<div class="sub-title">
						Date:
					</div>
					<div class="text-muted">
						${Date}
					</div>
				</div>
				</div>
				</div>
				</div>
				
			
	
                         `

                        Data.innerHTML += template
                    }
                }
                if(Data.innerHTML == ""){

                    Data.innerHTML = `
                    <div class="col-lg-4 col-sm-6 col-md-4 col-xl-3" >
                    <h5 class="text-danger">No Record Found...</h5>
                    </div>`;
                }


            })
            .catch(error => console.log('error', error));
    }

</script>

</html>